%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (important.eps)
%%CreationDate: (Sat Dec  1 16:15:59 2001)
%%BoundingBox: 0 0 24 24
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 24 24
userdict begin
DisplayImage
0 0
24 24
12.000000
24 24
1
0
0
256
000000
080808
101010
181818
292929
393939
424231
424242
4a4a4a
525252
5a5a29
636318
636352
636363
6b6b42
6b6b6b
737352
7b7b7b
848484
8c8c18
8c8c39
8c8c7b
8c8c8c
94945a
94948c
949494
9c9c5a
9c9c63
9c9c7b
9c9c9c
a5a563
a5a584
a5a594
a5a59c
a5a5a5
adad21
adad39
adad6b
adad7b
adad84
adad8c
adada5
adadad
b5b54a
b5b552
b5b58c
b5b5b5
bdbd08
bdbd5a
bdbd84
bdbd9c
bdbdbd
c6c608
c6c65a
c6c6c6
cece73
cecece
d6d618
d6d652
d6d663
d6d66b
d6d6d6
dede00
dede21
dede31
dede39
dede52
dedede
e7e708
e7e721
e7e729
e7e731
e7e75a
e7e763
e7e77b
e7e7e7
efef00
efef10
efef31
efef42
efefef
f7f710
f7f718
f7f731
f7f739
f7f74a
f7f7f7
ffff00
ffff08
ffff10
ffff21
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
ffffff
5b5b5b5b5b5b5b5b5b5b4b4b4b4b4b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b5b4b36221922
2222192238565b5b5b5b5b5b5b5b5b5b5b5633161f404d4d4d4d4d321c16385b5b5b5b5b
5b5b5b5b4b191e495757575757575757573a1a22565b5b5b5b5b5b5619314d5757575757
5757575757574d262e5b5b5b5b5b56193157575757574c14103e5757575757571b2e5b5b
5b5b38254d57575757571400000a4d57575757574d1e435b5b4b21495757575757570d00
0005405757575757573a295b5b382857575757575757120000094e575757575757571c4b
5b2241575757575757572300000b595757575757575728384b224d575757575757572f02
0013575757575757575744194b224d575757575757573904022457575757575757574419
4b224d575757575757573f05022b575757575757575744194b224d575757575757574607
033b575757575757575744194b224d575757575757574f160f4a57575757575757574422
5b2e405757575757575747141039595757575757575728385b3d1f575757575757571100
0009475757575757574f204b5b56213a575757575757100000063f575757575758302e5b
5b5b3d1e4d57575757573e0e0c2f5757575757573c22505b5b5b5b22265757575757575a
4e5757575757575716385b5b5b5b5b5b221b4d57575757575757575757583c12385b5b5b
5b5b5b5b5b221a354f575757575757574f2c19365b5b5b5b5b5b5b5b5b5b3d2215284444
4444371c152a4b5b5b5b5b5b5b5b5b5b5b5b5b5b4b361919191922384b5b5b5b5b5b5b5b

end
%%PageTrailer
%%Trailer
%%EOF
