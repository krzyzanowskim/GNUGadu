dnl $Id: configure.in,v 1.9 2004/09/23 08:41:26 krzyzak Exp $

AC_INIT(lib/libgadu.h)
AM_INIT_AUTOMAKE([libgadu],[1.5])
AC_CONFIG_HEADERS(lib/libgadu-config.h)
AC_PREREQ(2.50)

dnl AC_SUBST(CFLAGS_LIBGADU)
dnl AC_SUBST(LIBS_LIBGADU)
dnl AC_SUBST(OBJS)

dnl
dnl  Zaczynamy testy...
dnl

AC_C_CONST

dnl
dnl  Tworzymy osobny plik lib/libgadu-config.h niezale¿ny od autoconfa
dnl  z w³asn± przestrzeni± nazw (__GG_LIBGADU), ¿eby móc go spokojnie
dnl  w³±czyæ w <libgadu.h>
dnl

AC_DEFUN([AC_LIBGADU_DEFINE],
[
	AC_DEFINE([__GG_LIBGADU_$1])
])

AC_DEFUN([AC_LIBGADU_UNDEF],
[
	AC_UNDEFINE([__GG_LIBGADU_$1])
])

echo "/* Generated automatically by configure. Do not edit. */" > lib/libgadu-config.h
cat lib/libgadu-config.h.in >> lib/libgadu-config.h

dnl
dnl  Najpierw sprawdzamy te opcje, które s± wspólne dla libgadu i ekg.
dnl

AC_C_BIGENDIAN

if test "x$ac_cv_c_bigendian" = "xyes"; then
	AC_LIBGADU_DEFINE([BIGENDIAN])
fi

AC_NEED_STDINT_H

if test "x$STDINT_H" = "x"; then
	cp stdint.h lib/libgadu-stdint.h
	STDINT_H=libgadu-stdint.h 
fi

sed "s/#include <stdint.h>/#include <$STDINT_H>/" < lib/libgadu-config.h > lib/libgadu-config.h-
mv -f lib/libgadu-config.h- lib/libgadu-config.h

dnl SunOS
dnl AC_CHECK_LIB(nsl, t_accept, LIBS="$LIBS -lnsl")
dnl AC_CHECK_LIB(socket, socket, LIBS="$LIBS -lsocket")

dnl BeOS
dnl AC_ARG_WITH(bind,
dnl   [  --without-bind          Disable linking with libbind when found])
dnl 
dnl if test "x$with_bind" != "xno"; then
dnl 	AC_CHECK_LIB(bind, __inet_addr, LIBS="$LIBS -lbind")
dnl fi

dnl threadsafe
AC_CHECK_FUNCS([gethostbyname_r], [AC_LIBGADU_DEFINE([HAVE_GETHOSTBYNAME_R])])

AC_MSG_CHECKING([for va_copy])
AC_TRY_LINK([#include <stdarg.h>], [va_list a, b; va_copy(a, b);], 
[
	AC_MSG_RESULT([yes])
	AC_LIBGADU_DEFINE([HAVE_VA_COPY])
], [
	AC_MSG_RESULT([no])
])

AC_MSG_CHECKING([for __va_copy])
AC_TRY_LINK([#include <stdarg.h>], [va_list a, b; __va_copy(a, b);], 
[
	AC_MSG_RESULT([yes])
	AC_LIBGADU_DEFINE([HAVE___VA_COPY])
], [
	AC_MSG_RESULT([no])
])

lib_static_enabled=yes

dnl
dnl  Sprawd¼my, jak± wersjê vsnprintf() dostajemy. Dodatkowa opcja jest
dnl  dla crosskompilacji, bo nie mo¿na wtedy korzystaæ z AC_TRY_RUN().
dnl

AC_ARG_WITH(c99-vsnprintf,
  [  --with-c99-vsnprintf    Target system has C99-compatible vsnprintf()])

if test "x$with_c99_vsnprintf" = "xyes"; then
	AC_LIBGADU_DEFINE([HAVE_C99_VSNPRINTF])
fi

if test "x$with_c99_vsnprintf" = "x"; then
	AC_MSG_CHECKING([for C99-compatible vsnprintf()])
	AC_TRY_RUN(
	[
		#include <stdio.h>
		int main()
		{
			char tmp;
			return (snprintf(&tmp, sizeof(tmp), "test") != 4);
		}
	], [
		AC_MSG_RESULT([yes])
		AC_LIBGADU_DEFINE([HAVE_C99_VSNPRINTF])
	], [
		AC_MSG_RESULT([no])
	])
fi

dnl
dnl  Resolver libgadu oparty na pthread
dnl

ACX_PTHREAD(
[
 	dnl workaround dla pkconfiga
	if test "x$PTHREAD_CFLAGS" = "x-pthread"; then
		PTHREAD_LIBS="$PTHREAD_LIBS -pthread"
	fi
	
	LIBS="$PTHREAD_LIBS $LIBS"
	CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
	CFLAGS_LIBGADU="$CFLAGS_LIBGADU $PTHREAD_CFLAGS"
	CC="$PTHREAD_CC"
	
	have_pthread=yes
	
	AC_LIBGADU_DEFINE([HAVE_PTHREAD])
	], [
	AC_MSG_ERROR([Your system is not supporting pthreads])
])

dnl
dnl  Sprawdzamy, czy jest ,,long long'' na potrzeby obliczeñ czasów DCC
dnl

AC_MSG_CHECKING([for long long])

AC_TRY_COMPILE([],
[
	long long a = 1LL;
	unsigned long long b = 1LL;
], [
	AC_MSG_RESULT([yes])
	AC_LIBGADU_DEFINE([HAVE_LONG_LONG])
])

dnl
dnl  Sprawdzamy OpenSSL
dnl

AC_CHECK_OPENSSL

if test "x$have_openssl" = "xyes"; then
	OBJS="$OBJS simlite.o"
 	LDFLAGS="$OPENSSL_LIBS $LDFLAGS"
 	LIBS_LIBGADU="$LIBS_LIBGADU $OPENSSL_LIBS"
 	CFLAGS="$CFLAGS $OPENSSL_INCLUDES"
 	CFLAGS_LIBGADU="$CFLAGS_LIBGADU $OPENSSL_INCLUDES"
AC_LIBGADU_DEFINE([HAVE_OPENSSL])
fi

dnl
dnl  Zachowujemy opcje dla libgadu
dnl

dnl LIBS_LIBGADU="$LIBS_LIBGADU $LIBS"

AC_CONFIG_FILES(Makefile)
dnl AC_OUTPUT([lib/libgadu-config.h])

echo
echo "configured options:"


if test "x$have_pthread" = "xyes"; then
	echo " - pthread: enabled"
else
	echo " - pthread: disabled"
fi


echo

